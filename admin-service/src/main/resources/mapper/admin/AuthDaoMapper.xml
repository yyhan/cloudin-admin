<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloudin.admin.dao.AuthDao">
    <resultMap id="RoleResultMap" type="com.cloudin.admin.entity.Role">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="code" jdbcType="VARCHAR" property="code" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="is_valid" jdbcType="TINYINT" property="valid" />
    </resultMap>
    <resultMap id="PermissionResultMap" type="com.cloudin.admin.entity.Permission">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="content" jdbcType="VARCHAR" property="content" />
        <result column="icon" jdbcType="VARCHAR" property="icon" />
        <result column="category" jdbcType="INTEGER" property="category" />
        <result column="order" jdbcType="INTEGER" property="order" />
        <result column="parent_id" jdbcType="INTEGER" property="parentId" />
        <result column="ext_info" jdbcType="VARCHAR" property="extInfo" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="is_valid" jdbcType="TINYINT" property="valid" />
    </resultMap>
    <select id="listRoles" resultMap="RoleResultMap">
        SELECT B.`id`, B.`code`, B.`name`, B.`create_time`, B.`update_time`, B.`is_valid`
        FROM administrator_role A
        LEFT JOIN role B ON A.role_id = B.id
        WHERE A.administrator_id = #{administratorId} AND A.is_valid = 1 AND  B.is_valid = 1
    </select>
    <select id="listPermission" resultMap="PermissionResultMap">
        SELECT D.`id`, D.`name`, D.`content`, D.`icon`, D.`category`, D.`order`, D.`parent_id`, D.`ext_info`,
        D.`create_time`, D.`update_time`, D.`is_valid`
        FROM administrator_role A
        LEFT JOIN role B ON A.role_id = B.id
        LEFT JOIN role_permission C ON A.role_id = C.role_id
        LEFT JOIN permission D ON C.permission_id = D.id
        <where>
            <if test="administratorId != null and administratorId > 0">
                A.administrator_id = #{administratorId}
            </if>
            AND A.is_valid = 1 AND  B.is_valid = 1 AND  C.is_valid = 1 AND  D.is_valid = 1
        </where>
    </select>
    <select id="listAllPermission" resultMap="PermissionResultMap">
        SELECT id, name, content, icon, category, `order`, parent_id, ext_info, create_time, update_time, is_valid
	    FROM permission
	    where is_valid = 1
    </select>
    <select id="listPermissionRoleMap" resultType="java.util.Map">
        SELECT A.id permissionId, A.content, C.id roleId, C.code
        FROM permission A
        LEFT JOIN role_permission B ON A.id = B.permission_id
        LEFT JOIN role C ON B.role_id = C.id
        WHERE A.is_valid = 1 AND  B.is_valid = 1 AND  C.is_valid = 1
    </select>
    <select id="listAllowedRoleCode" resultType="java.lang.String">
        SELECT R.`code`
        FROM permission A
        JOIN role_permission RP ON A.id = RP.permission_id
        JOIN role R ON R.id = RP.role_id
        WHERE A.content = #{content} AND A.is_valid = 1 AND R.is_valid = 1 AND RP.is_valid = 1
    </select>
</mapper>

