<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloudin.admin.dao.PermissionDAO">
    <resultMap id="BaseResultMap" type="com.cloudin.admin.entity.Permission">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="content" jdbcType="VARCHAR" property="content" />
        <result column="icon" jdbcType="VARCHAR" property="icon" />
        <result column="category" jdbcType="INTEGER" property="category" />
        <result column="order" jdbcType="INTEGER" property="order" />
        <result column="parent_id" jdbcType="INTEGER" property="parentId" />
        <result column="ext_info" jdbcType="VARCHAR" property="extInfo" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="is_valid" jdbcType="TINYINT" property="valid" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        `id`, `name`, `content`, `icon`, `category`, `order`, `parent_id`, `ext_info`, `create_time`,
        `update_time`, `is_valid`
    </sql>
    <select id="selectByExample" parameterType="com.cloudin.admin.entity.PermissionExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from `permission`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="offset != null and limit != null">
            limit ${offset}, ${limit}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from `permission`
        where `id` = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from `permission`
        where `id` = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.cloudin.admin.entity.PermissionExample">
        delete from `permission`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.cloudin.admin.entity.Permission">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into `permission` (`name`, `content`, `icon`,
        `category`, `order`, `parent_id`,
        `ext_info`, `is_valid`)
        values (#{name,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR},
        #{category,jdbcType=INTEGER}, #{order,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER},
        #{extInfo,jdbcType=VARCHAR}, #{valid,jdbcType=TINYINT})
    </insert>
    <insert id="insertSelective" parameterType="com.cloudin.admin.entity.Permission">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into `permission`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                `name`,
            </if>
            <if test="content != null">
                `content`,
            </if>
            <if test="icon != null">
                `icon`,
            </if>
            <if test="category != null">
                `category`,
            </if>
            <if test="order != null">
                `order`,
            </if>
            <if test="parentId != null">
                `parent_id`,
            </if>
            <if test="extInfo != null">
                `ext_info`,
            </if>
            <if test="valid != null">
                `is_valid`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                #{icon,jdbcType=VARCHAR},
            </if>
            <if test="category != null">
                #{category,jdbcType=INTEGER},
            </if>
            <if test="order != null">
                #{order,jdbcType=INTEGER},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=INTEGER},
            </if>
            <if test="extInfo != null">
                #{extInfo,jdbcType=VARCHAR},
            </if>
            <if test="valid != null">
                #{valid,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.cloudin.admin.entity.PermissionExample" resultType="java.lang.Long">
        select count(*) from `permission`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update `permission`
        <set>
            <if test="record.name != null">
                `name` = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.content != null">
                `content` = #{record.content,jdbcType=VARCHAR},
            </if>
            <if test="record.icon != null">
                `icon` = #{record.icon,jdbcType=VARCHAR},
            </if>
            <if test="record.category != null">
                `category` = #{record.category,jdbcType=INTEGER},
            </if>
            <if test="record.order != null">
                `order` = #{record.order,jdbcType=INTEGER},
            </if>
            <if test="record.parentId != null">
                `parent_id` = #{record.parentId,jdbcType=INTEGER},
            </if>
            <if test="record.extInfo != null">
                `ext_info` = #{record.extInfo,jdbcType=VARCHAR},
            </if>
            <if test="record.valid != null">
                `is_valid` = #{record.valid,jdbcType=TINYINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update `permission`
        set `name` = #{record.name,jdbcType=VARCHAR},
        `content` = #{record.content,jdbcType=VARCHAR},
        `icon` = #{record.icon,jdbcType=VARCHAR},
        `category` = #{record.category,jdbcType=INTEGER},
        `order` = #{record.order,jdbcType=INTEGER},
        `parent_id` = #{record.parentId,jdbcType=INTEGER},
        `ext_info` = #{record.extInfo,jdbcType=VARCHAR},
        `is_valid` = #{record.valid,jdbcType=TINYINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.cloudin.admin.entity.Permission">
        update `permission`
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                `content` = #{content,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                `icon` = #{icon,jdbcType=VARCHAR},
            </if>
            <if test="category != null">
                `category` = #{category,jdbcType=INTEGER},
            </if>
            <if test="order != null">
                `order` = #{order,jdbcType=INTEGER},
            </if>
            <if test="parentId != null">
                `parent_id` = #{parentId,jdbcType=INTEGER},
            </if>
            <if test="extInfo != null">
                `ext_info` = #{extInfo,jdbcType=VARCHAR},
            </if>
            <if test="valid != null">
                `is_valid` = #{valid,jdbcType=TINYINT},
            </if>
        </set>
        where `id` = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.cloudin.admin.entity.Permission">
    update `permission`
    set `name` = #{name,jdbcType=VARCHAR},
      `content` = #{content,jdbcType=VARCHAR},
      `icon` = #{icon,jdbcType=VARCHAR},
      `category` = #{category,jdbcType=INTEGER},
      `order` = #{order,jdbcType=INTEGER},
      `parent_id` = #{parentId,jdbcType=INTEGER},
      `ext_info` = #{extInfo,jdbcType=VARCHAR},
      `is_valid` = #{valid,jdbcType=TINYINT}
    where `id` = #{id,jdbcType=INTEGER}
  </update>
    <select id="listPermission" resultMap="BaseResultMap">
        SELECT D.`id`, D.`name`, D.`content`, D.`icon`, D.`category`, D.`order`, D.`parent_id`, D.`ext_info`,
        D.`create_time`, D.`update_time`, D.`is_valid`
        FROM administrator_role A
        LEFT JOIN role B ON A.role_id = B.id
        LEFT JOIN role_permission C ON A.role_id = C.role_id
        LEFT JOIN permission D ON C.permission_id = D.id
        WHERE A.administrator_id = #{administratorId}
    </select>
</mapper>