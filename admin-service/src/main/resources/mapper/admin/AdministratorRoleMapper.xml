<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloudin.admin.dao.AdministratorRoleDAO">
  <resultMap id="BaseResultMap" type="com.cloudin.admin.entity.AdministratorRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="administrator_id" jdbcType="INTEGER" property="administratorId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_valid" jdbcType="TINYINT" property="valid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `administrator_id`, `role_id`, `create_time`, `update_time`, `is_valid`
  </sql>
  <select id="selectByExample" parameterType="com.cloudin.admin.entity.AdministratorRoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `administrator_role`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="offset != null and limit != null">
      limit ${offset}, ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `administrator_role`
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `administrator_role`
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cloudin.admin.entity.AdministratorRoleExample">
    delete from `administrator_role`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cloudin.admin.entity.AdministratorRole">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `administrator_role` (`administrator_id`, `role_id`, `is_valid`
      )
    values (#{administratorId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{valid,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cloudin.admin.entity.AdministratorRole">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `administrator_role`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="administratorId != null">
        `administrator_id`,
      </if>
      <if test="roleId != null">
        `role_id`,
      </if>
      <if test="valid != null">
        `is_valid`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="administratorId != null">
        #{administratorId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cloudin.admin.entity.AdministratorRoleExample" resultType="java.lang.Long">
    select count(*) from `administrator_role`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `administrator_role`
    <set>
      <if test="record.administratorId != null">
        `administrator_id` = #{record.administratorId,jdbcType=INTEGER},
      </if>
      <if test="record.roleId != null">
        `role_id` = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.valid != null">
        `is_valid` = #{record.valid,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `administrator_role`
    set `administrator_id` = #{record.administratorId,jdbcType=INTEGER},
      `role_id` = #{record.roleId,jdbcType=INTEGER},
      `is_valid` = #{record.valid,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cloudin.admin.entity.AdministratorRole">
    update `administrator_role`
    <set>
      <if test="administratorId != null">
        `administrator_id` = #{administratorId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        `role_id` = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="valid != null">
        `is_valid` = #{valid,jdbcType=TINYINT},
      </if>
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cloudin.admin.entity.AdministratorRole">
    update `administrator_role`
    set `administrator_id` = #{administratorId,jdbcType=INTEGER},
      `role_id` = #{roleId,jdbcType=INTEGER},
      `is_valid` = #{valid,jdbcType=TINYINT}
    where `id` = #{id,jdbcType=INTEGER}
  </update>
    <select id="listRoles" resultType="java.lang.String">
        SELECT B.`code`
        FROM administrator_role A
        LEFT JOIN role B ON A.role_id = B.id
        WHERE A.administrator_id = #{administratorId}
    </select>
</mapper>